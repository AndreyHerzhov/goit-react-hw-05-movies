{"version":3,"file":"static/js/33.03b94bd4.chunk.js","mappings":"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","sources":["pages/MovieDetails/MovieDetails.styled.js","pages/MovieDetails/MovieDetails.jsx","shared/api/movies.js","../node_modules/nanoid/index.browser.js"],"sourcesContent":["import styled from \"styled-components\";\n\nexport const Title = styled.h2`\n        font-size: 16px;\n        font-weight: 700;\n        color: black;\n        font-family: 'Courier New', Courier, monospace;\n`\n\nexport const Text = styled.p`\n        font-weight: 400;\n        font-size: 12px;\n        color: black;\n        font-family: 'Courier New', Courier, monospace;\n`\n\nexport const Container = styled.div`\n        display: flex;\n        padding: 20px;\n`\n\nexport const ImgWrapper = styled.div`\n        width: 200px;\n        height: 300px;\n        background-color: whitesmoke;\n        padding: 20px;\n`\n\nexport const InfoWrapper = styled.div`\n        width: 200px;\n        height: 300px;\n        background-color: orange;\n        padding: 20px;\n`\n\nexport const Img = styled.img`\ndisplay: block;\nwidth: 100%;\n`\n\nexport const AdditioanlInfo = styled.div`\n\npadding: 10px;\nheight: 80px;\nwidth: 100%;\nborder-bottom: 1px solid black;\nborder-top: 1px solid black;\n`\n\nexport const List = styled.ul`\ndisplay: flex;\nflex-direction: column;\n`","import { Text,Title, Container, ImgWrapper, InfoWrapper, Img, AdditioanlInfo, List } from \"./MovieDetails.styled\"\nimport { useEffect, useState } from \"react\"\nimport { useParams, useNavigate, Outlet, useLocation } from \"react-router-dom\"\nimport { getMovieByID } from \"shared/api/movies\"\nimport { Link } from \"react-router-dom\"\nimport { nanoid } from \"nanoid\";\n\nconst MovieDetails = () => {\n    const [state, setState] = useState({\n        item: {},\n        reviews: [],\n        loading: false,\n        error: null\n    })\n    const {movieId} = useParams()\n    const navigate = useNavigate()\n    const location = useLocation()\n    const   from   = location.state?.from || \"/movies\"\n    // console.log(from)\n\n    const goBack = () => navigate(location.state.from)\n   \n    useEffect(() => {\n        const fetchPosts = async() => {\n                setState(prevState => ({\n                    ...prevState,\n                    loading: true,\n                    error: null,\n    \n                }))\n            try {\n                const result = await getMovieByID(movieId);\n                // console.log(\"getMovieByID\", result)\n                setState(prevState => {\n                    return {\n                        ...prevState,\n                        item:  {result}\n                    }\n                })\n               \n            } catch (error) {\n                console.log(error)\n            }\n            finally {\n                setState(prevState => {\n                    return {\n                        ...prevState,\n                        loading: false,\n\n                    }\n                })\n            }\n        }\n        fetchPosts() \n    }, [movieId]\n  )\n\n   const { item } = state\n  \n    const url = \"https://image.tmdb.org/t/p/w500\"\n\n    return ( \n        <>\n        <button onClick={goBack}>Go back</button>\n       <Container>\n            <ImgWrapper >\n            {item.result && <Img src={`${url}${item.result.data.poster_path}`}/>}\n                {/* <Img src={`${state.data.poster_path}`}/> */}\n            </ImgWrapper>\n            <InfoWrapper>\n                {item.result &&  <>\n                    <Title>{item.result.data.original_title}</Title> \n                    <Text>Vote average:{item.result.data.vote_average}</Text>\n                    <Title>Overview</Title> \n                    <Text>{item.result.data.overview}</Text>\n                    <Title>Genres</Title> \n                    {item.result.data.genres.map(el => <Text key={nanoid()}>{el.name}</Text>)}\n                    \n                </>\n                }   \n            </InfoWrapper>\n            \n       </Container>\n     <AdditioanlInfo>\n        <Text>Additional information</Text>\n        <List>\n            <Link state={{from}} to={`/movies/${movieId}/cast`}>Cast</Link>\n            <Link state={{from}} to={`/movies/${movieId}/reviews`}>Reviews</Link>\n        </List>\n     </AdditioanlInfo>\n     <Outlet/>\n     </> \n    )\n}\n\n\nexport default MovieDetails","import axios from \"axios\";\n\nconst API_KEY = '799d796b985f1f6ed2e5b2e723499181';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nconst instance = axios.create({\n    baseURL: \"https://api.themoviedb.org/3\",\n    params: {\n        api_key: API_KEY,\n        _limit: 10,\n    }\n})\n\nexport const getMoviesByQuery = async (q) => {\n  try {\n    const response = await axios('/search/movie', {\n      params: {\n        api_key: API_KEY,\n        query: q,\n      },\n    });\n\n    return response;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport const getGenres = async () => {\n    try {\n      const genres = await axios('/genre/movie/list', {\n        params: {\n          api_key: API_KEY,\n          \n        },\n      });\n\n      return genres.data.genres;\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\nexport const getMovieByID = async(id) => {\n    try {\n      const response = await axios(`/movie/${id}`, {\n        params: {\n          api_key: API_KEY,\n        }\n      });\n\n      return response;\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n\nexport const getMovies = async(_page = 1) => {\n    const {data} = await instance.get(\"/trending/movie/day\", {\n        params: {\n            api_key: API_KEY,\n            _page,\n        }\n    })\n    return data;\n}\n\nexport const getCreditsByID = async(id) => {\n  try {\n    const response = await axios(`/movie/${id}/credits`, {\n      params: {\n        api_key: API_KEY,\n      }\n    });\n\n    return response;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport const getReviewsByID = async(id) => {\n  try {\n    const response = await axios(`/movie/${id}/reviews`, {\n      params: {\n        api_key: API_KEY,\n      }\n    });\n\n    return response;\n  } catch (error) {\n    console.log(error);\n  }\n}","export { urlAlphabet } from './url-alphabet/index.js'\nexport let random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nexport let customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nexport let customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nexport let nanoid = (size = 21) =>\n  crypto.getRandomValues(new Uint8Array(size)).reduce((id, byte) => {\n    byte &= 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte > 62) {\n      id += '-'\n    } else {\n      id += '_'\n    }\n    return id\n  }, '')\n"],"names":["Title","styled","Text","Container","ImgWrapper","InfoWrapper","Img","AdditioanlInfo","List","useState","item","reviews","loading","error","state","setState","movieId","useParams","navigate","useNavigate","location","useLocation","from","useEffect","fetchPosts","prevState","getMovieByID","result","console","log","onClick","src","data","poster_path","original_title","vote_average","overview","genres","map","el","name","nanoid","to","API_KEY","axios","instance","baseURL","params","api_key","_limit","getMoviesByQuery","q","query","response","id","getMovies","_page","get","getCreditsByID","getReviewsByID","size","crypto","getRandomValues","Uint8Array","reduce","byte","toString","toUpperCase"],"sourceRoot":""}